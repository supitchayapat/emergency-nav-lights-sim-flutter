def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

// query git for the tag and commit count. Use these to automate versioning.
def gitTag = 'git describe --tags --abbrev=0'.execute([], project.rootDir).text.split("/").last().trim()
def gitCommitCount = Integer.parseInt('git rev-list --count HEAD'.execute([], project.rootDir).text.trim())

// For local build
// def keystoreProperties = new Properties()
// keystoreProperties.load(new FileInputStream(rootProject.file("key.properties")))

apply plugin: 'com.android.application'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"

android {
    signingConfigs {
        release {
            // For local build
            // keyAlias keystoreProperties['keyAlias']
            // keyPassword keystoreProperties['keyPassword']
            // storeFile file(keystoreProperties['storeFile'])
            // storePassword keystoreProperties['storePassword']
            keyAlias System.getenv("BITRISEIO_ANDROID_KEYSTORE_ALIAS")
            keyPassword System.getenv("BITRISEIO_ANDROID_KEYSTORE_PRIVATE_KEY_PASSWORD")
            storeFile file(System.getenv("HOME") + "/keystores/keystore.jks")
            storePassword System.getenv("BITRISEIO_ANDROID_KEYSTORE_PASSWORD")
        }
    }
    compileSdkVersion 27
    lintOptions {
        disable 'InvalidPackage'
    }
    defaultConfig {
        applicationId "com.swarmnyc.emergencynavigationlights"
        minSdkVersion 16
        targetSdkVersion 27
        versionCode gitCommitCount
        versionName gitTag
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        debug {
            applicationIdSuffix ".dev"
            manifestPlaceholders = [appName: "Navigation Lights Sim Dev", appShortName: "⛵ Dev"]
        }
        release {
            manifestPlaceholders = [appName: "Navigation Nav Lights Sim", appShortName: "⛵ Nav Lights"]
            signingConfig signingConfigs.release

            minifyEnabled true
            useProguard true

            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

flutter {
    source '../..'
}

dependencies {
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
}
